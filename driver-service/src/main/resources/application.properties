# ============================
# Micro Service Configuration
# ============================

microservice.name=driver-service
#microservice.zone=${zone:blue}
microservice.environment=${spring.profiles.active}

# ================================
# Spring Boot Configuration
# ================================

spring.application.name=driver-service
spring.main.banner-mode=off

# Service HTTP port
server.port=${port:9904}

# Active environment profile
# Default: local
# Use --env=[local|dev|prod] or --microservice.environment=[local|dev|prod] to specify environment
spring.profiles.active=${env:local}

logging.config=classpath:log4j2-${spring.profiles.active}.properties

spring.aop.proxy-target-class=true

spring.jmx.enabled=false

# ==========================
# Actuator management config
# ==========================
endpoints.info.sensitive=false
endpoints.health.sensitive=false
endpoints.loggers.sensitive=false
endpoints.beans.sensitive=false
endpoints.mappings.sensitive=false

endpoints.shutdown.enabled=false
endpoints.jmx.enabled=false
management.health.diskspace.enabled=false
management.security.enabled=false

## ========================
## DATASOURCE CONFIGURATION
## ========================
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.connection-test-query=SELECT 1

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://118.69.82.66:3306/omart_db?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=omart
spring.datasource.password=ThuongNhauMaSong@123

spring.datasource.continue-on-error=true
spring.jackson.default-property-inclusion: NON_NULL
# Need to create hibernate SessionFactory from @Transactional
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# Show or not log for each sql query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.properties.javax.persistence.validation.mode=none

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.connection.CharSet=utf8mb4
spring.jpa.properties.hibernate.connection.characterEncoding=utf8mb4
spring.jpa.properties.hibernate.connection.useUnicode=true
## ========================
## FlyWay CONFIGURATION
## ========================
flyway.baseline-on-migrate=false

# ========================
# Thumbor Image service
# ========================
thumbor.host=http://172.18.0.4:8000
thumbor.proxy=https://thumbor.omartvietnam.com
thumbor.secretKey=OMart!@#456

spring.http.multipart.max-file-size=20MB
spring.http.multipart.max-request-size=20MB

# ========================
# Auth service
# ========================
auth.userEndpointUrl=http://localhost:9901/v1/_internal/users
auth.checkTokenEndpointUrl=http://localhost:9901/v1/oauth/check_token
auth.clientId=omart7FnTbKEStGWK2A8abwbZLsgW7FnTbKEStGWK2A8abwbZLsgW
auth.clientSecret=wtxbGFJuYt5LEMh4BjjMwQqJ
